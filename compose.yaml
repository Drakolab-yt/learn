services:
    php:
        build:
            context: .
            target: app_php
            args:
                COMPOSER_GITHUB_TOKEN: ${COMPOSER_GITHUB_TOKEN:-}
        depends_on:
            - database
        volumes:
            - ./:/srv
            - ${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}
            - ~/.ssh:/root/.ssh
            - php-socket:/var/run/php
            - composercache:/.composer
        environment:
            - SSH_AUTH_SOCK=${SSH_AUTH_SOCK}

    nginx:
        build:
            context: .
            target: app_nginx
        depends_on:
            - php
        volumes:
            - php-socket:/var/run/php
            - ./public:/srv/public:ro
        ports:
            - "8000:80"

    assets:
        profiles:
            - node
        image: node:20-alpine
        working_dir: /srv
        volumes:
            - ./:/srv
        ports:
            - "8080:8080"

###> doctrine/doctrine-bundle ###
    database:
        image: postgres:16-alpine
        environment:
            POSTGRES_DB: learn
            # You should definitely change the password in production
            POSTGRES_PASSWORD: pass
            POSTGRES_USER: learn
        healthcheck:
            test: ["CMD", "pg_isready", "-d", "learn", "-U", "learn"]
            timeout: 5s
            retries: 5
            start_period: 60s
        volumes:
            - database_data:/var/lib/postgresql/data:rw
            # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
            # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
        ports:
            - "5432:5432"

volumes:
    php-socket:
    composercache:
###> doctrine/doctrine-bundle ###
    database_data:
###< doctrine/doctrine-bundle ###
